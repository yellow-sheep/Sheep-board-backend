#import UserOrderByInput  from './generated/prisma.graphql'
#import BoardOrderByInput  from './generated/prisma.graphql'
#import ListOrderByInput  from './generated/prisma.graphql'
#import CardOrderByInput  from './generated/prisma.graphql'

type Query {
  users(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: UserOrderByInput
  ): [User!]!

  boards(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: BoardOrderByInput
  ): [Board!]!

  board(id: ID!): Board!

  lists(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: ListOrderByInput
  ): [List!]!

  list(id: ID!): List!

  cards(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: CardOrderByInput
  ): [Cards]
  me: User!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UpdateUserInput!): User!
  login(data: LoginUserInput!): AuthPayload
  createBoard(data: CreateBoardInput!): Board!
  updateBoard(id: ID!, data: UpdateBoardInput!): Board!
  deleteBoard(id: ID!): Board!
}

# type Subscription {

# }

type AuthPayload {
  token: String!
  user: User!
}
input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateBoardInput {
  title: String!
}

input UpdateBoardInput {
  title: String
}

type User {
  id: ID!
  name: String!
  email: String
  password: String!
  updatedAt: String!
  createdAt: String!
  boards: [Board!]!
  cards: [Card!]!
}

type Board {
  id: ID!
  title: String!
  author: User!
  lists: [List!]!
  cards: [Card!]!
  updatedAt: String!
  createdAt: String!
}

type List {
  id: ID!
  title: String!
  cards: [Card!]!
  board: Board!
  updatedAt: String!
  createdAt: String!
}

type Cards {
  id: ID!
  tag: String!
  title: String!
  text: String!
  author: User!
  list: List!
  board: Board!
  updatedAt: String!
  createdAt: String!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
